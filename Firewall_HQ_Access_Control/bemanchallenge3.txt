#############################################################################################################################################################
# Be A Man Challenge 3
# VPC: Secure the firewall rules so that only the specified path is valid: US > choose a country > Tokyo HQ. Any excess access is an instant fail.
# Linux VM 1: deploy Theo's / Beron's script, and add a line to the instance information saying "I, <insert name here>, thank you, Theo and Beron!"
# Linux VM 2: change the background picture to a different landscape, add another line to the instance information mentioning your name and your team leader's name, and insert a GIF of a different hot chick
#############################################################################################################################################################

#VPC network
resource "google_compute_network" "mainvpc" {
  name                            = "mainvpc"
  routing_mode                    = "REGIONAL"
  auto_create_subnetworks         = false
  mtu                             = 1460
  delete_default_routes_on_create = false

}

#Firewall Rule
resource "google_compute_firewall" "rdptous" {
  name    = "rdptous"
  network = google_compute_network.mainvpc.name

  allow {
    protocol = "tcp"
    ports = ["3389"]
  }

  source_ranges = ["0.0.0.0/0"]
}
resource "google_compute_firewall" "allow-ssh" {
  name    = "allow-ssh"
  network = google_compute_network.mainvpc.name

  allow {
    protocol      = "tcp"
    ports         = ["22"]
  }

  allow {
    protocol      = "tcp"
    ports         = ["80"]
    
  }
    source_ranges = ["10.45.15.0/24"]
    destination_ranges = ["10.45.25.0/24"]
}

resource "google_compute_firewall" "allow-ssh1" {
  name    = "allow-ssh"
  network = google_compute_network.mainvpc.name

 allow {
    protocol      = "tcp"
    ports         = ["22"]
  }

  allow {
    protocol      = "tcp"
    ports         = ["80"]
    
  }

  source_ranges = ["10.45.25.0/24"]
  destination_ranges = ["10.45.35.0/24"]
}

#Subnet
resource "google_compute_subnetwork" "iowadusty" {
  name                     = "iowadusty"
  ip_cidr_range            = "10.45.15.0/24"
  region                   = "us-central1"
  network                  = google_compute_network.mainvpc.id
  private_ip_google_access = true
}
resource "google_compute_subnetwork" "saopaulojermaine" {
  name                     = "saopaulojermaine"
  ip_cidr_range            = "10.45.25.0/24"
  region                   = "southamerica-east1"
  network                  = google_compute_network.mainvpc.id
  private_ip_google_access = true
}
resource "google_compute_subnetwork" "africajeffery" {
  name                     = "africajeffery"
  ip_cidr_range            = "10.45.35.0/24"
  region                   = "africa-south1"
  network                  = google_compute_network.mainvpc.id
  private_ip_google_access = true
}

#VM Instance
################################################
resource "google_compute_instance" "there" {
name = "iowadustyhq"
machine_type = "e2-small"
zone = "us-central1"
allow_stopping_for_update = true

boot_disk {
    initialize_params {
        image = "windows-cloud/windows-11"
 }
}
network_interface {
network = google_compute_network.mainvpc.name
subnetwork = google_compute_subnetwork.iowadusty.name
access_config {

    }
  }
  metadata_startup_script = file("${path.module}/startup.sh")
}
################################################
resource "google_compute_instance" "this" {
name = "saopaulohq"
machine_type = "e2-small"
zone = "southamerica-east1-b"
allow_stopping_for_update = true

boot_disk {
    initialize_params {
        image = "debian-cloud/debian-11"
 }
}
network_interface {
network = google_compute_network.mainvpc.name
subnetwork = google_compute_subnetwork.saopaulojermaine.name
access_config {

    }
  }
  metadata_startup_script = file("${path.module}/startup.sh")
}
################################################
resource "google_compute_instance" "that" {
name = "africahq"
machine_type = "e2-small"
zone = "africa-south1-b"
allow_stopping_for_update = true

boot_disk {
    initialize_params {
        image = "debian-cloud/debian-11"
 }
}
network_interface {
network = google_compute_network.mainvpc.name
subnetwork = google_compute_subnetwork.africajeffery.name
access_config {

    }
  }
  metadata_startup_script = file("${path.module}/startup.sh")
}